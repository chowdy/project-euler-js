console.log("hello world")

/*
 * If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.
 * The sum of these multiples is 23.
 *
 * Find the sum of all the multiples of 3 or 5 below 1000.
 */
function problem001() {
    sum = 0
    for (var i = 0; i < 1000; i++) {
        if (i%3 == 0 || i%5 == 0) {
            sum += i
        }
    }
    return sum
}

/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2,
 * the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
 * even-valued terms.
 */
function problem002() {
    sum = 0
    n = 2
    n_1 = 1
    while (n < 4000000) {

        if (n%2 == 0) {
            sum += n
        }

        n_next = n + n_1
        n_1 = n
        n = n_next
    }
    return sum
}

/*
 * The prime factors of 13195 are 5, 7, 13 and 29.
 * What is the largest prime factor of the number 600851475143 ?
 */
function problem003() {
    primeFactors = []

    num = 600851475143
    numBuf = num
    for (i = 2; numBuf > 1; i++) {
        if (numBuf%i==0) {
            primeFactors.push(i);
            numBuf = numBuf/i
        }
    }

    return Math.max(...primeFactors)
}

console.log(problem003())